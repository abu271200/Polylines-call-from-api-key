// class Autogenerated {
//   CustomZoneFare? customZoneFare;
//   Direction? direction;
//   int? driverAroundMiles;
//   List<FareDetails>? fareDetails;
//   String? message;
//   String? metric;
//   int? status;

//   Autogenerated(
//       {this.customZoneFare,
//       this.direction,
//       this.driverAroundMiles,
//       this.fareDetails,
//       this.message,
//       this.metric,
//       this.status});

//   Autogenerated.fromJson(Map<String, dynamic> json) {
//     customZoneFare = json['customZoneFare'] != null
//         ? new CustomZoneFare.fromJson(json['customZoneFare'])
//         : null;
//     direction = json['direction'] != null
//         ? new Direction.fromJson(json['direction'])
//         : null;
//     driverAroundMiles = json['driver_around_miles'];
//     if (json['fare_details'] != null) {
//       fareDetails = <FareDetails>[];
//       json['fare_details'].forEach((v) {
//         fareDetails!.add(new FareDetails.fromJson(v));
//       });
//     }
//     message = json['message'];
//     metric = json['metric'];
//     status = json['status'];
//   }

//   Map<dynamic, dynamic> toJson() {
//     final Map<dynamic, dynamic> data = new Map<dynamic, dynamic>();
//     if (this.customZoneFare != null) {
//       data['customZoneFare'] = this.customZoneFare!.toJson();
//     }
//     if (this.direction != null) {
//       data['direction'] = this.direction!.toJson();
//     }
//     data['driver_around_miles'] = this.driverAroundMiles;
//     if (this.fareDetails != null) {
//       data['fare_details'] = this.fareDetails!.map((v) => v.toJson()).toList();
//     }
//     data['message'] = this.message;
//     data['metric'] = this.metric;
//     data['status'] = this.status;
//     return data;
//   }
// }

// class CustomZoneFare {
//   int? iId;
//   Null? fareDetails;

//   CustomZoneFare({this.iId, this.fareDetails});

//   CustomZoneFare.fromJson(Map<String, dynamic> json) {
//     iId = json['_id'];
//     fareDetails = json['fare_details'];
//   }

//   Map<String, dynamic> toJson() {
//     final Map<String, dynamic> data = new Map<String, dynamic>();
//     data['_id'] = this.iId;
//     data['fare_details'] = this.fareDetails;
//     return data;
//   }
// }

// class Direction {
//   List<GeocodedWaypoints>? geocodedWaypoints;
//   List<Routes>? routes;
//   String? status;

//   Direction({this.geocodedWaypoints, this.routes, this.status});

//   Direction.fromJson(Map<String, dynamic> json) {
//     if (json['geocoded_waypoints'] != null) {
//       geocodedWaypoints = <GeocodedWaypoints>[];
//       json['geocoded_waypoints'].forEach((v) {
//         geocodedWaypoints!.add(new GeocodedWaypoints.fromJson(v));
//       });
//     }
//     if (json['routes'] != null) {
//       routes = <Routes>[];
//       json['routes'].forEach((v) {
//         routes!.add(new Routes.fromJson(v));
//       });
//     }
//     status = json['status'];
//   }

//   Map<String, dynamic> toJson() {
//     final Map<String, dynamic> data = new Map<String, dynamic>();
//     if (this.geocodedWaypoints != null) {
//       data['geocoded_waypoints'] =
//           this.geocodedWaypoints!.map((v) => v.toJson()).toList();
//     }
//     if (this.routes != null) {
//       data['routes'] = this.routes!.map((v) => v.toJson()).toList();
//     }
//     data['status'] = this.status;
//     return data;
//   }
// }

// class GeocodedWaypoints {
//   String? geocoderStatus;
//   String? placeId;
//   List<String>? types;

//   GeocodedWaypoints({this.geocoderStatus, this.placeId, this.types});

//   GeocodedWaypoints.fromJson(Map<String, dynamic> json) {
//     geocoderStatus = json['geocoder_status'];
//     placeId = json['place_id'];
//     types = json['types'].cast<String>();
//   }

//   Map<String, dynamic> toJson() {
//     final Map<String, dynamic> data = new Map<String, dynamic>();
//     data['geocoder_status'] = this.geocoderStatus;
//     data['place_id'] = this.placeId;
//     data['types'] = this.types;
//     return data;
//   }
// }

// class Routes {
//   Bounds? bounds;
//   String? copyrights;
//   List<Legs>? legs;
//   PolylineResponse? overviewPolyline;
//   String? summary;
//   // List<Null>? warnings;
//   // List<Null>? waypointOrder;

//   Routes(
//       {this.bounds,
//       this.copyrights,
//       this.legs,
//       this.overviewPolyline,
//       this.summary,
//       // this.warnings,
//       // this.waypointOrder
//       });

//   Routes.fromJson(Map<String, dynamic> json) {
//     bounds =
//         json['bounds'] != null ? new Bounds.fromJson(json['bounds']) : null;
//     copyrights = json['copyrights'];
//     if (json['legs'] != null) {
//       legs = <Legs>[];
//       json['legs'].forEach((v) {
//         legs!.add(new Legs.fromJson(v));
//       });
//     }
//     overviewPolyline = json['overview_polyline'] != null
//         ? new PolylineResponse.fromJson(json['overview_polyline'])
//         : null;
//     summary = json['summary'];
//     }

//   Map<String, dynamic> toJson() {
//     final Map<String, dynamic> data = new Map<String, dynamic>();
//     if (this.bounds != null) {
//       data['bounds'] = this.bounds!.toJson();
//     }
//     data['copyrights'] = this.copyrights;
//     if (this.legs != null) {
//       data['legs'] = this.legs!.map((v) => v.toJson()).toList();
//     }
//     if (this.overviewPolyline != null) {
//       data['overview_polyline'] = this.overviewPolyline!.toJson();
//     }
//     data['summary'] = this.summary;
//     return data;
//   }
// }

// class Bounds {
//   Northeast? northeast;
//   Northeast? southwest;

//   Bounds({this.northeast, this.southwest});

//   Bounds.fromJson(Map<String, dynamic> json) {
//     northeast = json['northeast'] != null
//         ? new Northeast.fromJson(json['northeast'])
//         : null;
//     southwest = json['southwest'] != null
//         ? new Northeast.fromJson(json['southwest'])
//         : null;
//   }

//   Map<String, dynamic> toJson() {
//     final Map<String, dynamic> data = new Map<String, dynamic>();
//     if (this.northeast != null) {
//       data['northeast'] = this.northeast!.toJson();
//     }
//     if (this.southwest != null) {
//       data['southwest'] = this.southwest!.toJson();
//     }
//     return data;
//   }
// }

// class Northeast {
//   double? lat;
//   double? lng;

//   Northeast({this.lat, this.lng});

//   Northeast.fromJson(Map<String, dynamic> json) {
//     lat = json['lat'];
//     lng = json['lng'];
//   }

//   Map<String, dynamic> toJson() {
//     final Map<String, dynamic> data = new Map<String, dynamic>();
//     data['lat'] = this.lat;
//     data['lng'] = this.lng;
//     return data;
//   }
// }

// class Legs {
//   Distance? distance;
//   Distance? duration;
//   String? endAddress;
//   Northeast? endLocation;
//   String? startAddress;
//   Northeast? startLocation;
//   List<Steps>? steps;
//   List<Null>? trafficSpeedEntry;
//   List<Null>? viaWaypoint;

//   Legs(
//       {this.distance,
//       this.duration,
//       this.endAddress,
//       this.endLocation,
//       this.startAddress,
//       this.startLocation,
//       this.steps,
//       this.trafficSpeedEntry,
//       this.viaWaypoint});

//   Legs.fromJson(Map<String, dynamic> json) {
//     distance = json['distance'] != null
//         ? new Distance.fromJson(json['distance'])
//         : null;
//     duration = json['duration'] != null
//         ? new Distance.fromJson(json['duration'])
//         : null;
//     endAddress = json['end_address'];
//     endLocation = json['end_location'] != null
//         ? new Northeast.fromJson(json['end_location'])
//         : null;
//     startAddress = json['start_address'];
//     startLocation = json['start_location'] != null
//         ? new Northeast.fromJson(json['start_location'])
//         : null;
//     if (json['steps'] != null) {
//       steps = <Steps>[];
//       json['steps'].forEach((v) {
//         steps!.add(new Steps.fromJson(v));
//       });
//     }
//   }

//   Map<String, dynamic> toJson() {
//     final Map<String, dynamic> data = new Map<String, dynamic>();
//     if (this.distance != null) {
//       data['distance'] = this.distance!.toJson();
//     }
//     if (this.duration != null) {
//       data['duration'] = this.duration!.toJson();
//     }
//     data['end_address'] = this.endAddress;
//     if (this.endLocation != null) {
//       data['end_location'] = this.endLocation!.toJson();
//     }
//     data['start_address'] = this.startAddress;
//     if (this.startLocation != null) {
//       data['start_location'] = this.startLocation!.toJson();
//     }
//     if (this.steps != null) {
//       data['steps'] = this.steps!.map((v) => v.toJson()).toList();
//     }
//     return data;
//   }
// }

// class Distance {
//   String? text;
//   int? value;

//   Distance({this.text, this.value});

//   Distance.fromJson(Map<String, dynamic> json) {
//     text = json['text'];
//     value = json['value'];
//   }

//   Map<String, dynamic> toJson() {
//     final Map<String, dynamic> data = new Map<String, dynamic>();
//     data['text'] = this.text;
//     data['value'] = this.value;
//     return data;
//   }
// }

// class Steps {
//   Distance? distance;
//   Distance? duration;
//   Northeast? endLocation;
//   String? htmlInstructions;
//   PolylineResponse? polyline;
//   Northeast? startLocation;
//   String? travelMode;
//   String? maneuver;

//   Steps(
//       {this.distance,
//       this.duration,
//       this.endLocation,
//       this.htmlInstructions,
//       this.polyline,
//       this.startLocation,
//       this.travelMode,
//       this.maneuver});

//   Steps.fromJson(Map<String, dynamic> json) {
//     distance = json['distance'] != null
//         ? new Distance.fromJson(json['distance'])
//         : null;
//     duration = json['duration'] != null
//         ? new Distance.fromJson(json['duration'])
//         : null;
//     endLocation = json['end_location'] != null
//         ? new Northeast.fromJson(json['end_location'])
//         : null;
//     htmlInstructions = json['html_instructions'];
//     polyline = json['polyline'] != null
//         ? new PolylineResponse.fromJson(json['polyline'])
//         : null;
//     startLocation = json['start_location'] != null
//         ? new Northeast.fromJson(json['start_location'])
//         : null;
//     travelMode = json['travel_mode'];
//     maneuver = json['maneuver'];
//   }

//   Map<String, dynamic> toJson() {
//     final Map<String, dynamic> data = new Map<String, dynamic>();
//     if (this.distance != null) {
//       data['distance'] = this.distance!.toJson();
//     }
//     if (this.duration != null) {
//       data['duration'] = this.duration!.toJson();
//     }
//     if (this.endLocation != null) {
//       data['end_location'] = this.endLocation!.toJson();
//     }
//     data['html_instructions'] = this.htmlInstructions;
//     if (this.polyline != null) {
//       data['polyline'] = this.polyline!.toJson();
//     }
//     if (this.startLocation != null) {
//       data['start_location'] = this.startLocation!.toJson();
//     }
//     data['travel_mode'] = this.travelMode;
//     data['maneuver'] = this.maneuver;
//     return data;
//   }
// }

// class PolylineResponse {
//   String? points;

//   PolylineResponse({this.points});

//   PolylineResponse.fromJson(Map<String, dynamic> json) {
//     points = json['points'];
//   }

//   Map<String, dynamic> toJson() {
//     final Map<String, dynamic> data = new Map<String, dynamic>();
//     data['points'] = this.points;
//     return data;
//   }
// }

// class FareDetails {
//   int? modelId;
//   String? modelName;
//   int? modelSize;
//   int? modelMid;
//    dynamic? baseFare;
//   int? waitingFare;
//   int? minKm;
//   int? minFare;
//   int? belowAboveKm;
//   dynamic? belowKm;
//    dynamic? aboveKm;
//   int? nightFare;
//   int? nightCharge;
//   int? eveningCharge;
//   String? eveningTimingFrom;
//   String? eveningTimingTo;
//   String? nightTimingFrom;
//   String? nightTimingTo;
//   int? eveningFare;
//   int? waitingTime;
//   dynamic? minutesFare;
//   String? description;
//   String? metric;
//   int? taxiSpeed;
//   int? fareCalculationType;
//   Null? nextModels;
//   int? additionalFare;
//   String? alertShortDescription;
//   String? alertLongDescription;
//   String? priceHike;
//   Null? tollDetail;
//   int? tollFare;
//   int? fullDay;
//   int? halfDay;

//   FareDetails(
//       {this.modelId,
//       this.modelName,
//       this.modelSize,
//       this.modelMid,
//       this.baseFare,
//       this.waitingFare,
//       this.minKm,
//       this.minFare,
//       this.belowAboveKm,
//       this.belowKm,
//       this.aboveKm,
//       this.nightFare,
//       this.nightCharge,
//       this.eveningCharge,
//       this.eveningTimingFrom,
//       this.eveningTimingTo,
//       this.nightTimingFrom,
//       this.nightTimingTo,
//       this.eveningFare,
//       this.waitingTime,
//       this.minutesFare,
//       this.description,
//       this.metric,
//       this.taxiSpeed,
//       this.fareCalculationType,
//       this.nextModels,
//       this.additionalFare,
//       this.alertShortDescription,
//       this.alertLongDescription,
//       this.priceHike,
//       this.tollDetail,
//       this.tollFare,
//       this.fullDay,
//       this.halfDay});

//   FareDetails.fromJson(Map<String, dynamic> json) {
//     modelId = json['model_id'];
//     modelName = json['model_name'];
//     modelSize = json['model_size'];
//     modelMid = json['model_mid'];
//     baseFare = json['base_fare'];
//     waitingFare = json['waiting_fare'];
//     minKm = json['min_km'];
//     minFare = json['min_fare'];
//     belowAboveKm = json['below_above_km'];
//     belowKm = json['below_km'];
//     aboveKm = json['above_km'];
//     nightFare = json['night_fare'];
//     nightCharge = json['night_charge'];
//     eveningCharge = json['evening_charge'];
//     eveningTimingFrom = json['evening_timing_from'];
//     eveningTimingTo = json['evening_timing_to'];
//     nightTimingFrom = json['night_timing_from'];
//     nightTimingTo = json['night_timing_to'];
//     eveningFare = json['evening_fare'];
//     waitingTime = json['waiting_time'];
//     minutesFare = json['minutes_fare'];
//     description = json['description'];
//     metric = json['metric'];
//     taxiSpeed = json['taxi_speed'];
//     fareCalculationType = json['fare_calculation_type'];
//     nextModels = json['next_models'];
//     additionalFare = json['additional_fare'];
//     alertShortDescription = json['alert_short_description'];
//     alertLongDescription = json['alert_long_description'];
//     priceHike = json['price_hike'];
//     tollDetail = json['tollDetail'];
//     tollFare = json['tollFare'];
//     fullDay = json['full_day'];
//     halfDay = json['half_day'];
//   }

//   Map<String, dynamic> toJson() {
//     final Map<String, dynamic> data = new Map<String, dynamic>();
//     data['model_id'] = this.modelId;
//     data['model_name'] = this.modelName;
//     data['model_size'] = this.modelSize;
//     data['model_mid'] = this.modelMid;
//     data['base_fare'] = this.baseFare;
//     data['waiting_fare'] = this.waitingFare;
//     data['min_km'] = this.minKm;
//     data['min_fare'] = this.minFare;
//     data['below_above_km'] = this.belowAboveKm;
//     data['below_km'] = this.belowKm;
//     data['above_km'] = this.aboveKm;
//     data['night_fare'] = this.nightFare;
//     data['night_charge'] = this.nightCharge;
//     data['evening_charge'] = this.eveningCharge;
//     data['evening_timing_from'] = this.eveningTimingFrom;
//     data['evening_timing_to'] = this.eveningTimingTo;
//     data['night_timing_from'] = this.nightTimingFrom;
//     data['night_timing_to'] = this.nightTimingTo;
//     data['evening_fare'] = this.eveningFare;
//     data['waiting_time'] = this.waitingTime;
//     data['minutes_fare'] = this.minutesFare;
//     data['description'] = this.description;
//     data['metric'] = this.metric;
//     data['taxi_speed'] = this.taxiSpeed;
//     data['fare_calculation_type'] = this.fareCalculationType;
//     data['next_models'] = this.nextModels;
//     data['additional_fare'] = this.additionalFare;
//     data['alert_short_description'] = this.alertShortDescription;
//     data['alert_long_description'] = this.alertLongDescription;
//     data['price_hike'] = this.priceHike;
//     data['tollDetail'] = this.tollDetail;
//     data['tollFare'] = this.tollFare;
//     data['full_day'] = this.fullDay;
//     data['half_day'] = this.halfDay;
//     return data;
//   }
// }















class PolylineResponse {
  CustomZoneFare? customZoneFare;
  Direction? direction;
  int? driverAroundMiles;
  List<FareDetails>? fareDetails;
  List<Routes>? routes;
  String? message;
  String? metric;
  int? status;

  PolylineResponse(
      {this.customZoneFare,
      this.direction,
      this.routes,
      this.driverAroundMiles,
      this.fareDetails,
      this.message,
      this.metric,
      this.status});

  PolylineResponse.fromJson(Map<String, dynamic> json) {
    customZoneFare = json['customZoneFare'] != null
        ? new CustomZoneFare.fromJson(json['customZoneFare'])
        : null;
    direction = json['direction'] != null
        ? new Direction.fromJson(json['direction'])
        : null;
    driverAroundMiles = json['driver_around_miles'];
    if (json['fare_details'] != null) {
      fareDetails = <FareDetails>[];
      json['fare_details'].forEach((v) {
        fareDetails!.add(new FareDetails.fromJson(v));
      });
    }
     if (json['routes'] != null) {
      routes = <Routes>[];
      json['routes'].forEach((v) {
        routes!.add(new Routes.fromJson(v));
      });
    }
    message = json['message'];
    metric = json['metric'];
    status = json['status'];
  }

  Map<String, dynamic> toJson() {
    final Map<String, dynamic> data = new Map<String, dynamic>();
    if (this.customZoneFare != null) {
      data['customZoneFare'] = this.customZoneFare!.toJson();
    }
    if (this.direction != null) {
      data['direction'] = this.direction!.toJson();
    }
    data['driver_around_miles'] = this.driverAroundMiles;
    if (this.fareDetails != null) {
      data['fare_details'] = this.fareDetails!.map((v) => v.toJson()).toList();
    }
    if (this.routes != null) {
      data['routes'] = this.routes!.map((v) => v.toJson()).toList();
    }
    data['message'] = this.message;
    data['metric'] = this.metric;
    data['status'] = this.status;
    return data;
  }
}

class CustomZoneFare {
  int? iId;
  Null? fareDetails;

  CustomZoneFare({this.iId, this.fareDetails});

  CustomZoneFare.fromJson(Map<String, dynamic> json) {
    iId = json['_id'];
    fareDetails = json['fare_details'];
  }

  Map<String, dynamic> toJson() {
    final Map<String, dynamic> data = new Map<String, dynamic>();
    data['_id'] = this.iId;
    data['fare_details'] = this.fareDetails;
    return data;
  }
}

class Direction {
  List<GeocodedWaypoints>? geocodedWaypoints;
  List<Routes>? routes;
  String? status;

  Direction({this.geocodedWaypoints, this.routes, this.status});

  Direction.fromJson(Map<String, dynamic> json) {
    if (json['geocoded_waypoints'] != null) {
      geocodedWaypoints = <GeocodedWaypoints>[];
      json['geocoded_waypoints'].forEach((v) {
        geocodedWaypoints!.add(new GeocodedWaypoints.fromJson(v));
      });
    }
    if (json['routes'] != null) {
      routes = <Routes>[];
      json['routes'].forEach((v) {
        routes!.add(new Routes.fromJson(v));
      });
    }
    status = json['status'];
  }

  Map<String, dynamic> toJson() {
    final Map<String, dynamic> data = new Map<String, dynamic>();
    if (this.geocodedWaypoints != null) {
      data['geocoded_waypoints'] =
          this.geocodedWaypoints!.map((v) => v.toJson()).toList();
    }
    if (this.routes != null) {
      data['routes'] = this.routes!.map((v) => v.toJson()).toList();
    }
    data['status'] = this.status;
    return data;
  }
}

class GeocodedWaypoints {
  String? geocoderStatus;
  String? placeId;
  List<String>? types;

  GeocodedWaypoints({this.geocoderStatus, this.placeId, this.types});

  GeocodedWaypoints.fromJson(Map<String, dynamic> json) {
    geocoderStatus = json['geocoder_status'];
    placeId = json['place_id'];
    types = json['types'].cast<String>();
  }

  Map<String, dynamic> toJson() {
    final Map<String, dynamic> data = new Map<String, dynamic>();
    data['geocoder_status'] = this.geocoderStatus;
    data['place_id'] = this.placeId;
    data['types'] = this.types;
    return data;
  }
}

class Routes {
  Bounds? bounds;
  String? copyrights;
  List<Legs>? legs;
  PolylineModel? overviewPolyline;
  String? summary;

  Routes(
      {this.bounds,
      this.copyrights,
      this.legs,
      this.overviewPolyline,
      this.summary,
      });

  Routes.fromJson(Map<String, dynamic> json) {
    bounds =
        json['bounds'] != null ? new Bounds.fromJson(json['bounds']) : null;
    copyrights = json['copyrights'];
    if (json['legs'] != null) {
      legs = <Legs>[];
      json['legs'].forEach((v) {
        legs!.add(new Legs.fromJson(v));
      });
    }
    overviewPolyline = json['overview_polyline'] != null
        ? PolylineModel.fromJson(json['overview_polyline'])
        : null;
    summary = json['summary'];
  }

  Map<String, dynamic> toJson() {
    final Map<String, dynamic> data = new Map<String, dynamic>();
    if (this.bounds != null) {
      data['bounds'] = this.bounds!.toJson();
    }
    data['copyrights'] = this.copyrights;
    if (this.legs != null) {
      data['legs'] = this.legs!.map((v) => v.toJson()).toList();
    }
    if (this.overviewPolyline != null) {
      data['overview_polyline'] = this.overviewPolyline!.toJson();
    }
    data['summary'] = this.summary;
    return data;
  }
}

class Bounds {
  Northeast? northeast;
  Northeast? southwest;

  Bounds({this.northeast, this.southwest});

  Bounds.fromJson(Map<String, dynamic> json) {
    northeast = json['northeast'] != null
        ? new Northeast.fromJson(json['northeast'])
        : null;
    southwest = json['southwest'] != null
        ? new Northeast.fromJson(json['southwest'])
        : null;
  }

  Map<String, dynamic> toJson() {
    final Map<String, dynamic> data = new Map<String, dynamic>();
    if (this.northeast != null) {
      data['northeast'] = this.northeast!.toJson();
    }
    if (this.southwest != null) {
      data['southwest'] = this.southwest!.toJson();
    }
    return data;
  }
}

class Northeast {
  double? lat;
  double? lng;

  Northeast({this.lat, this.lng});

  Northeast.fromJson(Map<String, dynamic> json) {
    lat = json['lat'];
    lng = json['lng'];
  }

  Map<String, dynamic> toJson() {
    final Map<String, dynamic> data = new Map<String, dynamic>();
    data['lat'] = this.lat;
    data['lng'] = this.lng;
    return data;
  }
}

class Legs {
  Distance? distance;
  Distance? duration;
  String? endAddress;
  Northeast? endLocation;
  String? startAddress;
  Northeast? startLocation;
  List<Steps>? steps;

  Legs(
      {this.distance,
      this.duration,
      this.endAddress,
      this.endLocation,
      this.startAddress,
      this.startLocation,
      this.steps,
      });

  Legs.fromJson(Map<String, dynamic> json) {
    distance = json['distance'] != null
        ? new Distance.fromJson(json['distance'])
        : null;
    duration = json['duration'] != null
        ? new Distance.fromJson(json['duration'])
        : null;
    endAddress = json['end_address'];
    endLocation = json['end_location'] != null
        ? new Northeast.fromJson(json['end_location'])
        : null;
    startAddress = json['start_address'];
    startLocation = json['start_location'] != null
        ? new Northeast.fromJson(json['start_location'])
        : null;
    if (json['steps'] != null) {
      steps = <Steps>[];
      json['steps'].forEach((v) {
        steps!.add(new Steps.fromJson(v));
      });
    }
  }

  Map<String, dynamic> toJson() {
    final Map<String, dynamic> data = new Map<String, dynamic>();
    if (this.distance != null) {
      data['distance'] = this.distance!.toJson();
    }
    if (this.duration != null) {
      data['duration'] = this.duration!.toJson();
    }
    data['end_address'] = this.endAddress;
    if (this.endLocation != null) {
      data['end_location'] = this.endLocation!.toJson();
    }
    data['start_address'] = this.startAddress;
    if (this.startLocation != null) {
      data['start_location'] = this.startLocation!.toJson();
    }
    if (this.steps != null) {
      data['steps'] = this.steps!.map((v) => v.toJson()).toList();
    }
    return data;
  }
}

class Distance {
  String? text;
  int? value;

  Distance({this.text, this.value});

  Distance.fromJson(Map<String, dynamic> json) {
    text = json['text'];
    value = json['value'];
  }

  Map<String, dynamic> toJson() {
    final Map<String, dynamic> data = new Map<String, dynamic>();
    data['text'] = this.text;
    data['value'] = this.value;
    return data;
  }
}

class Steps {
  Distance? distance;
  Distance? duration;
  Northeast? endLocation;
  String? htmlInstructions;
  PolylineModel? polyline;
  Northeast? startLocation;
  String? travelMode;
  String? maneuver;

  Steps(
      {this.distance,
      this.duration,
      this.endLocation,
      this.htmlInstructions,
      this.polyline,
      this.startLocation,
      this.travelMode,
      this.maneuver});

  Steps.fromJson(Map<String, dynamic> json) {
    distance = json['distance'] != null
        ? new Distance.fromJson(json['distance'])
        : null;
    duration = json['duration'] != null
        ? new Distance.fromJson(json['duration'])
        : null;
    endLocation = json['end_location'] != null
        ? new Northeast.fromJson(json['end_location'])
        : null;
    htmlInstructions = json['html_instructions'];
    polyline = json['polyline'] != null
        ? PolylineModel.fromJson(json['polyline'])
        : null;
    startLocation = json['start_location'] != null
        ? new Northeast.fromJson(json['start_location'])
        : null;
    travelMode = json['travel_mode'];
    maneuver = json['maneuver'];
  }

  Map<String, dynamic> toJson() {
    final Map<String, dynamic> data = new Map<String, dynamic>();
    if (this.distance != null) {
      data['distance'] = this.distance!.toJson();
    }
    if (this.duration != null) {
      data['duration'] = this.duration!.toJson();
    }
    if (this.endLocation != null) {
      data['end_location'] = this.endLocation!.toJson();
    }
    data['html_instructions'] = this.htmlInstructions;
    if (this.polyline != null) {
      data['polyline'] = this.polyline!.toJson();
    }
    if (this.startLocation != null) {
      data['start_location'] = this.startLocation!.toJson();
    }
    data['travel_mode'] = this.travelMode;
    data['maneuver'] = this.maneuver;
    return data;
  }
}

class PolylineModel {
  String? points;

  PolylineModel({this.points});

  PolylineModel.fromJson(Map<String, dynamic> json) {
    points = json['points'];
  }

  Map<String, dynamic> toJson() {
    final Map<String, dynamic> data = new Map<String, dynamic>();
    data['points'] = this.points;
    return data;
  }
}

class FareDetails {
  int? modelId;
  String? modelName;
  int? modelSize;
  int? modelMid;
  dynamic? baseFare;
  int? waitingFare;
  int? waitingTimeSpeed;
  int? minKm;
  int? minFare;
  int? belowAboveKm;
  dynamic? belowKm;
  dynamic? aboveKm;
  int? nightFare;
  int? nightCharge;
  int? eveningCharge;
  String? eveningTimingFrom;
  String? eveningTimingTo;
  String? nightTimingFrom;
  String? nightTimingTo;
  int? eveningFare;
  int? waitingTime;
  dynamic? minutesFare;
  String? description;
  String? metric;
  int? taxiSpeed;
  int? fareCalculationType;
  Null? nextModels;
  int? additionalFare;
  String? alertShortDescription;
  String? alertLongDescription;
  String? priceHike;
  Null? tollDetail;
  int? tollFare;
  int? fullDay;
  int? halfDay;

  FareDetails(
      {this.modelId,
      this.modelName,
      this.modelSize,
      this.modelMid,
      this.baseFare,
      this.waitingFare,
      this.waitingTimeSpeed,
      this.minKm,
      this.minFare,
      this.belowAboveKm,
      this.belowKm,
      this.aboveKm,
      this.nightFare,
      this.nightCharge,
      this.eveningCharge,
      this.eveningTimingFrom,
      this.eveningTimingTo,
      this.nightTimingFrom,
      this.nightTimingTo,
      this.eveningFare,
      this.waitingTime,
      this.minutesFare,
      this.description,
      this.metric,
      this.taxiSpeed,
      this.fareCalculationType,
      this.nextModels,
      this.additionalFare,
      this.alertShortDescription,
      this.alertLongDescription,
      this.priceHike,
      this.tollDetail,
      this.tollFare,
      this.fullDay,
      this.halfDay});

  FareDetails.fromJson(Map<String, dynamic> json) {
    modelId = json['model_id'];
    modelName = json['model_name'];
    modelSize = json['model_size'];
    modelMid = json['model_mid'];
    baseFare = json['base_fare'];
    waitingFare = json['waiting_fare'];
    waitingTimeSpeed = json['waitingTimeSpeed'];
    minKm = json['min_km'];
    minFare = json['min_fare'];
    belowAboveKm = json['below_above_km'];
    belowKm = json['below_km'];
    aboveKm = json['above_km'];
    nightFare = json['night_fare'];
    nightCharge = json['night_charge'];
    eveningCharge = json['evening_charge'];
    eveningTimingFrom = json['evening_timing_from'];
    eveningTimingTo = json['evening_timing_to'];
    nightTimingFrom = json['night_timing_from'];
    nightTimingTo = json['night_timing_to'];
    eveningFare = json['evening_fare'];
    waitingTime = json['waiting_time'];
    minutesFare = json['minutes_fare'];
    description = json['description'];
    metric = json['metric'];
    taxiSpeed = json['taxi_speed'];
    fareCalculationType = json['fare_calculation_type'];
    nextModels = json['next_models'];
    additionalFare = json['additional_fare'];
    alertShortDescription = json['alert_short_description'];
    alertLongDescription = json['alert_long_description'];
    priceHike = json['price_hike'];
    tollDetail = json['tollDetail'];
    tollFare = json['tollFare'];
    fullDay = json['full_day'];
    halfDay = json['half_day'];
  }

  Map<String, dynamic> toJson() {
    final Map<String, dynamic> data = new Map<String, dynamic>();
    data['model_id'] = this.modelId;
    data['model_name'] = this.modelName;
    data['model_size'] = this.modelSize;
    data['model_mid'] = this.modelMid;
    data['base_fare'] = this.baseFare;
    data['waiting_fare'] = this.waitingFare;
    data['waitingTimeSpeed'] = this.waitingTimeSpeed;
    data['min_km'] = this.minKm;
    data['min_fare'] = this.minFare;
    data['below_above_km'] = this.belowAboveKm;
    data['below_km'] = this.belowKm;
    data['above_km'] = this.aboveKm;
    data['night_fare'] = this.nightFare;
    data['night_charge'] = this.nightCharge;
    data['evening_charge'] = this.eveningCharge;
    data['evening_timing_from'] = this.eveningTimingFrom;
    data['evening_timing_to'] = this.eveningTimingTo;
    data['night_timing_from'] = this.nightTimingFrom;
    data['night_timing_to'] = this.nightTimingTo;
    data['evening_fare'] = this.eveningFare;
    data['waiting_time'] = this.waitingTime;
    data['minutes_fare'] = this.minutesFare;
    data['description'] = this.description;
    data['metric'] = this.metric;
    data['taxi_speed'] = this.taxiSpeed;
    data['fare_calculation_type'] = this.fareCalculationType;
    data['next_models'] = this.nextModels;
    data['additional_fare'] = this.additionalFare;
    data['alert_short_description'] = this.alertShortDescription;
    data['alert_long_description'] = this.alertLongDescription;
    data['price_hike'] = this.priceHike;
    data['tollDetail'] = this.tollDetail;
    data['tollFare'] = this.tollFare;
    data['full_day'] = this.fullDay;
    data['half_day'] = this.halfDay;
    return data;
  }
}
